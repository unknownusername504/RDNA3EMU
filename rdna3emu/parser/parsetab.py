
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AT BINARY BSS COMMA COMMENT DATA DBLCOLON DIRECTIVE FLOATING GLOBAL HASH HEX INSTRUCTION INTEGER KERNEL_DESC LABEL LDS_GLOBAL LPAREN M0 MINUS OCTAL OR P2ALIGN PLUS REF RPAREN SET SGPR STRING SYMBOL TARGET TEXT TYPE VCC_HI VCC_LO VGPR WEAKprogram : statementsstatements : statement\n                  | statements statementstatement : INSTRUCTION\n                 | INSTRUCTION operands\n                 | INSTRUCTION operands DBLCOLON INSTRUCTION operands\n    operands : operand\n                | operands COMMA operand\n                | operands OR operand\n                | operands operandoperand : SGPR \n               | VGPR \n               | INTEGER \n               | FLOATING\n               | SYMBOL\n               | BINARY\n               | func\n               | modifiermodifier : LABEL INTEGER func : SYMBOL LPAREN SYMBOL RPAREN\n           | SYMBOL LPAREN INTEGER RPAREN'
    
_lr_action_items = {'INSTRUCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,22,24,25,28,29,30,],[4,4,-2,-4,-3,-5,-7,-11,-12,-13,-14,-15,-16,-17,-18,23,-10,-19,-8,-9,-6,-20,-21,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,22,24,25,28,29,30,],[0,-1,-2,-4,-3,-5,-7,-11,-12,-13,-14,-15,-16,-17,-18,-10,-19,-8,-9,-6,-20,-21,]),'SGPR':([4,6,7,8,9,10,11,12,13,14,15,18,19,20,22,23,24,25,28,29,30,],[8,8,-7,-11,-12,-13,-14,-15,-16,-17,-18,8,-10,8,-19,8,-8,-9,8,-20,-21,]),'VGPR':([4,6,7,8,9,10,11,12,13,14,15,18,19,20,22,23,24,25,28,29,30,],[9,9,-7,-11,-12,-13,-14,-15,-16,-17,-18,9,-10,9,-19,9,-8,-9,9,-20,-21,]),'INTEGER':([4,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,28,29,30,],[10,10,-7,-11,-12,-13,-14,-15,-16,-17,-18,22,10,-10,10,27,-19,10,-8,-9,10,-20,-21,]),'FLOATING':([4,6,7,8,9,10,11,12,13,14,15,18,19,20,22,23,24,25,28,29,30,],[11,11,-7,-11,-12,-13,-14,-15,-16,-17,-18,11,-10,11,-19,11,-8,-9,11,-20,-21,]),'SYMBOL':([4,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,28,29,30,],[12,12,-7,-11,-12,-13,-14,-15,-16,-17,-18,12,-10,12,26,-19,12,-8,-9,12,-20,-21,]),'BINARY':([4,6,7,8,9,10,11,12,13,14,15,18,19,20,22,23,24,25,28,29,30,],[13,13,-7,-11,-12,-13,-14,-15,-16,-17,-18,13,-10,13,-19,13,-8,-9,13,-20,-21,]),'LABEL':([4,6,7,8,9,10,11,12,13,14,15,18,19,20,22,23,24,25,28,29,30,],[16,16,-7,-11,-12,-13,-14,-15,-16,-17,-18,16,-10,16,-19,16,-8,-9,16,-20,-21,]),'DBLCOLON':([6,7,8,9,10,11,12,13,14,15,19,22,24,25,29,30,],[17,-7,-11,-12,-13,-14,-15,-16,-17,-18,-10,-19,-8,-9,-20,-21,]),'COMMA':([6,7,8,9,10,11,12,13,14,15,19,22,24,25,28,29,30,],[18,-7,-11,-12,-13,-14,-15,-16,-17,-18,-10,-19,-8,-9,18,-20,-21,]),'OR':([6,7,8,9,10,11,12,13,14,15,19,22,24,25,28,29,30,],[20,-7,-11,-12,-13,-14,-15,-16,-17,-18,-10,-19,-8,-9,20,-20,-21,]),'LPAREN':([12,],[21,]),'RPAREN':([26,27,],[29,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,2,],[3,5,]),'operands':([4,23,],[6,28,]),'operand':([4,6,18,20,23,28,],[7,19,24,25,7,19,]),'func':([4,6,18,20,23,28,],[14,14,14,14,14,14,]),'modifier':([4,6,18,20,23,28,],[15,15,15,15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yacc.py',7),
  ('statements -> statement','statements',1,'p_statements','yacc.py',11),
  ('statements -> statements statement','statements',2,'p_statements','yacc.py',12),
  ('statement -> INSTRUCTION','statement',1,'p_statement','yacc.py',19),
  ('statement -> INSTRUCTION operands','statement',2,'p_statement','yacc.py',20),
  ('statement -> INSTRUCTION operands DBLCOLON INSTRUCTION operands','statement',5,'p_statement','yacc.py',21),
  ('operands -> operand','operands',1,'p_operands','yacc.py',29),
  ('operands -> operands COMMA operand','operands',3,'p_operands','yacc.py',30),
  ('operands -> operands OR operand','operands',3,'p_operands','yacc.py',31),
  ('operands -> operands operand','operands',2,'p_operands','yacc.py',32),
  ('operand -> SGPR','operand',1,'p_operand','yacc.py',41),
  ('operand -> VGPR','operand',1,'p_operand','yacc.py',42),
  ('operand -> INTEGER','operand',1,'p_operand','yacc.py',43),
  ('operand -> FLOATING','operand',1,'p_operand','yacc.py',44),
  ('operand -> SYMBOL','operand',1,'p_operand','yacc.py',45),
  ('operand -> BINARY','operand',1,'p_operand','yacc.py',46),
  ('operand -> func','operand',1,'p_operand','yacc.py',47),
  ('operand -> modifier','operand',1,'p_operand','yacc.py',48),
  ('modifier -> LABEL INTEGER','modifier',2,'p_modifier','yacc.py',52),
  ('func -> SYMBOL LPAREN SYMBOL RPAREN','func',4,'p_func','yacc.py',56),
  ('func -> SYMBOL LPAREN INTEGER RPAREN','func',4,'p_func','yacc.py',57),
]
